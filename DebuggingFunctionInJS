For Debugging in JS
$('#publisherListTable').DataTable({
    "ajax": {
        "url": "/Home/GetData",
        "type": "GET",
        "datatype": "json",
        "error": function (xhr, error, thrown) {
            console.error("Error in DataTables AJAX: ", error);
        }
    },
    "columns": [
        { "data": "Name" },
        { "data": "Position" },
        { "data": "Office" },
        { "data": "Age" },
        { "data": "StartDate" },
        { "data": "Salary" }
    ]
});

Select certain column only
--Anonymous type
 var query = from publisher in context.Publishers
            select new
            {
                publisher.Name,
                publisher.Location // Replace with the desired column names
            };

var publishers = query.ToList();
--DTO type
public class PublisherDto
{
    public string Name { get; set; }
    public string Location { get; set; }
}
var query = from publisher in context.Publishers
            select new PublisherDto
            {
                Name = publisher.Name,
                Location = publisher.Location // Replace with the desired column names
            };

var publishers = query.ToList();

--Using Method Syntax
var publishers = context.Publishers
    .Select(p => new
    {
        p.Name,
        p.Location // Replace with the desired column names
    })
    .ToList();

var publishers = context.Publishers
    .Select(p => new PublisherDto
    {
        Name = p.Name,
        Location = p.Location // Replace with the desired column names
    })
    .ToList();

//Custom Validation
public class ProductLineValidator
{
    public static ValidationResult ValidateProductLine(string value, ValidationContext context)
    {
        if (value == "N" || value == "K")
        {
            return ValidationResult.Success;
        }
        return new ValidationResult("ProductLine must be either 'N' or 'K'.");
    }
}

[CustomValidation(typeof(ProductLineValidator), nameof(ProductLineValidator.ValidateProductLine))]
public string ProductLine { get; set; }

[RegularExpression("^[NK]$", ErrorMessage = "ProductLine must be either 'N' or 'K'.")]





