
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/3.1.7/css/fixedHeader.dataTables.min.css">
    <style>
        .dataTables_wrapper {
            width: 900px;
        }

            .dataTables_wrapper .dataTables_paginate {
                float: none;
                text-align: center;
            }

            .dataTables_wrapper .dataTables_info {
                float: left;
                padding-top: 0.755em;
            }

            .dataTables_wrapper .bottom {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }
    </style>
}

<h2>Products</h2>
@Html.ActionLink("+Add New", "Create", "Product", new { area = "" }, new { @class = "btn btn-success" })
@*@Html.ActionLink("Publishers", "Index", "Publisher")*@
<table id="example" class="display nowrap" style="width:100%">
    <thead>
        <tr>
            <th>No</th>
            <th>Actions</th>
            <th>Category</th>
            <th>Sub Category</th>
            <th>Name</th>
            <th>Product Number</th>
            <th>List Price</th>
            @*<th>Total Quantity</th>
            <th>Name</th>*@
        </tr>
    </thead>
</table>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.1.7/js/dataTables.fixedHeader.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#example').DataTable({
                "ajax": {
                    "url": "/Product/GetProduct",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": null,
                        "render": function (data, type, row, meta) {
                            return meta.row + 1;  // Display the row number (meta.row is zero-indexed)
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return '<a href="/Product/Edit/' + row.ProductID + '" class="btn btn-primary">Edit</a>' +
                                '<button id ="deleteButton" class="btn btn-danger" data-id="' + row.ProductID + '" style="margin-left: 5px;">Delete</a>';
                        }
                    },
                    { "data": "CategoryName" },
                    { "data": "SubCategoryName" },
                    { "data": "Name" },
                    { "data": "ProductNumber" },
                    { "data": "ListPrice" }

                ],
                "dom": '<"top"f>rt<"bottom"lpi><"clear">', // search on the top right, show entries, paging, showing on the bottom
                "pagingType": "full_numbers",
                "scrollY": "400px",
                "scrollX": true,
                "scrollCollapse": true,
                "fixedHeader": true,
                //"pagingType": "simple_numbers",
                "pageLength": 10,
                "lengthMenu": [10, 25, 50, 100],
                "scrollY": "400px",
                "scrollX": true,
                "scrollCollapse": true,
                "fixedHeader": true,
                "language": {
                    "paginate": {
                        "previous": "<",
                        "next": ">",
                        "first": "<<",
                        "last": ">>"
                    }
                }
            });
        });
        //Use this for datatables, becase the buttons are created dynamically
        $(document).on('click', '#deleteButton', function () {
            const itemId = $(this).data('id'); // Retrieve the ID of the item to delete

            Swal.fire({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this item!",
                icon: "warning",
                showCancelButton: true, // Enable the cancel button
                buttons: true,
                dangerMode: true,
            })
                .then((result) => {
                    if (result.isConfirmed) {
                        // Make an AJAX call to delete the item
                        $.ajax({
                            url: '/Product/Delete', // URL of your Delete method
                            type: 'POST', // Use POST for data modification
                            data: { id: itemId }, // Pass the ID as data
                            success: function (response) {
                                //if (response.success) {
                                //    Swal.fire("Deleted!", response.message, "success").then(() => {
                                //        location.reload(); // Reload the page or update UI
                                //    });
                                //} else {
                                //    Swal.fire("Error!", response.message, "error");
                                //}
                                Swal.fire("Poof! Your item has been deleted!", {
                                    icon: "success",
                                }).then(() => {
                                    // Optional: Reload the page or update the UI
                                    location.reload();
                                });
                            },
                            error: function (error) {
                                Swal.fire("Error!", "Unable to delete the item. Please try again.", "error");
                            }
                        });
                    } else if (result.dismiss == Swal.DismissReason.cancel) {
                        Swal.fire("Your item is safe!");
                    }
                });
        });
        // Assuming you have jQuery and SweetAlert loaded
        //$(document).ready(function () {
        //    $('#deleteButton').click(function () {
        //        const itemId = $(this).data('id'); // Retrieve the ID of the item to delete

        //        Swal.fire({
        //            title: "Are you sure?",
        //            text: "Once deleted, you will not be able to recover this item!",
        //            icon: "warning",
        //            showCancelButton: true, // Enable the cancel button
        //            buttons: true,
        //            dangerMode: true,
        //        })
        //            .then((result) => {
        //                if (result.isConfirmed) {
        //                    // Make an AJAX call to delete the item
        //                    $.ajax({
        //                        url: '/Product/Delete', // URL of your Delete method
        //                        type: 'POST', // Use POST for data modification
        //                        data: { id: itemId }, // Pass the ID as data
        //                        success: function (response) {
        //                            //if (response.success) {
        //                            //    Swal.fire("Deleted!", response.message, "success").then(() => {
        //                            //        location.reload(); // Reload the page or update UI
        //                            //    });
        //                            //} else {
        //                            //    Swal.fire("Error!", response.message, "error");
        //                            //}
        //                            Swal.fire("Poof! Your item has been deleted!", {
        //                                icon: "success",
        //                            }).then(() => {
        //                                // Optional: Reload the page or update the UI
        //                                location.reload();
        //                            });
        //                        },
        //                        error: function (error) {
        //                            Swal.fire("Error!", "Unable to delete the item. Please try again.", "error");
        //                        }
        //                    });
        //                } else if (result.dismiss == Swal.DismissReason.cancel) {
        //                    Swal.fire("Your item is safe!");
        //                }
        //            });
        //    });
        //    });
    </script>
}